# PipSqueek v4.X configuration file

#
# The parser will ignore any lines starting with a hash mark (#) and lines
# that are blank.  The basic format of a configuration option is:
#
#	option = "value";
#
# The semicolon is optional, as are the quotes (if it's a single word value)
#


# [Connection]

# These options define basic parameters used by the bot for connecting and
# interacting with an IRC network.  At a minimum, you must define the server
# that the bot will connect to ('server_address'), and the channel the bot 
# should join after it connects ('server_channel')

# The irc server that the bot will connect to when it starts.
# You can use an IP address or hostname here
server_address  = "irc.topgamers.net";

# The port the bot should use when connecting. 
# The default is 6667.
#server_port = "";

# The password needed for the bot to connect to the IRC server specified in
# the 'server_address' option
#server_password = "";

# The channel to join after connecting to the IRC server
server_channel  = "#pipsqueek";

# What nickname the bot should assume
identity_nickname = "SqueekPips";

# The ident string that the bot should present to the server when connecting
# eg:  pips@foo.host.com
#identity_ident    = "pips";

# The 'real name' string that the bot presents to the server when connecting
# eg:  [PipSqueek] (pips@foo.host.com) : Meow!
#identity_gecos    = "Meow!";



# [Administrative]

# These options define the interface between the bot and its users.
# You must set the primary administrator so that the bot will be able to
# receive additional commands once it is connected ('primary_admin')

# The user with this nickname will be given administrator privileges when
# he/she first registers with the bot
primary_admin = "insert.your.nickname.here";

# What should the bot look for at the beginning of a message to determine if
# it is a command.  eg: !quote
# If you don't want the bot to respond to these commands, just comment the
# next line out, or set it to an empty string
public_command_prefix = "!";

# The bot can try and answer commands when it is specifically addressed too
# eg: PipSqueek: quote
# Set to 0 or 1 to disable/enable respectively
answer_when_addressed = "1";

# If a user hasn't registered with the bot yet, don't let them use any
# commands.
# Set to 0 or 1 to disable/enable respectively
#only_registered_users = "1";

# This is the default access level attributed to any user or command that does
# not already have a level associated with them.  
# Must be set to a positive integer, default is 10.
default_access_level = "10";

# Most commands do not require the user to be identified, but you may wish to
# require it for some higher level commands.
# Must be set to a positive integer, default is 100;
#require_identified_for_level = "100";

# How often the bot should save the user database
# Recommended value is somewhere between 60 and 180.
# This must be a positive integer, default is 60.
#save_data_every_n_sec = "60";

# The bot needs to ping the server every so often to avoid the connection
# timing out.  This controls how often this is done.
# Recommended value is somewhere between 120 and 240.
# This must be a positive integer, default is 180.
#ping_server_frequency = "180";

# The type of ban the bot will use when banning a user:
#
#     1: *nick!*@*
#     2: *!*ident@*
#     3: *nick!*ident@*
#     4: *!*@*.host.name (default)
#     5: *nick!*@*.host.name
#     6: *!*ident@*.host.name
#     7: *nick!*ident@*.host.name
#
# The default is 4
default_ban_type = "4";

# What message the bot will give a user when it kicks them
# This can also be set to an absolute filename, in which case a random line
# will be read from the file and used as the kick message
default_kick_message = "Visit http://pipsqueek.net/ and save a buck or two!";



# [NickServ]
# These options are used by the NickServ plugin

# Controls whether the bot should identify with NickServ when it connects to
# the IRC network.  If enabled, you must set the nickserv_password below.
# Set to 0 or 1 to disable/enable respectively
#identify_with_nickserv = "";

# The password the bot sends to identify itself with NickServ
#nickserv_password      = "";



# [AutoRejoin]
# These options are used by the AutoRejoin plugin

# Controls whether the bot should rejoin the channel after it is kicked out
# Set to 0 or 1 to disable/enable respectively
rejoin_on_kick = "1";



# [CapsLock]
# These options are used by the CapsLock plugin

# Controls whether the bot will kick users that use excessive capital letters
# in their messages (an annoying habit).  You are able to define what the bot
# will consider 'excessive' in the following options.
# Set to 0 or 1 to disable/enable respectively
capslock_kick = "0";

# The minimum length a message has to be to constitute a kick
# Must be a positive integer
# Default is 12
capslock_minimum_length = "12";

# The percentage of characters in the message that have to be capital in order
# to constitute a kick
# Must be an integer in the range 0-100 inclusively
# Default is 75
capslock_percentage_caps = "63";

# The message to display when we do kick a user for caps (or a file to pull
# a random line from)
# If you do not specify this message, the default_kick_message will be used
#capslock_kick_message = "";


